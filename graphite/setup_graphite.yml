---
# We need to target all hosts in the group first to gather facts,
# otherwise any tasks using the group host_vars will fail.
- name: Gather facts from required server groups
  hosts: "grafana_server:graphite_server:statsd_server"
  gather_facts: no
  user: root
  tasks:
    - name: Wait for a successful connection
      wait_for_connection:
        connect_timeout: 2
        delay: 5
        sleep: 5
        timeout: 60

    - name: Gather facts
      setup:
        gather_subset: "!facter,!ohai"

- name: Setup graphite servers
  hosts: "graphite_server"
  gather_facts: no
  user: root
  vars:
    graphite_secret_key: "{{ lookup('env', 'RE_GRAPHITE_SECRET_KEY') }}"
    graphite_admin_password: "{{ lookup('env', 'RE_GRAPHITE_ADMIN_PASSWORD') }}"
    logrotate_configs:
      - name: uwsgi
        log: /var/log/uwsgi_graphite.log
        options:
          - compress
          - missingok
          - rotate 7
          - daily
          - notifempty
  tasks:
    - name: Install prerequisite distro packages
      apt:
        name:
          # requirement for cloning the repos
          # we install from
          - git
          # requirements for pip installs
          - gcc
          - libffi-dev
          - libssl-dev
          - python3-pip
          # requirements for ansible
          # TODO(odyssey4me):
          # Remove aptitude when we shift to using
          # ansible 2.4
          - aptitude
          - python3-apt
          - python3-minimal
        update_cache: yes
      register: install_packages
      until: install_packages | success
      retries: 5
      delay: 2

    - name: Configure firewall to allow statsd traffic (ipv4)
      ufw:
        rule: allow
        from_ip: "{{ hostvars[item].ansible_default_ipv4.address }}"
      loop: "{{ groups['statsd_server'] }}"

    - name: Configure firewall to allow grafana traffic (ipv4)
      ufw:
        rule: allow
        from_ip: "{{ hostvars[item].ansible_default_ipv4.address }}"
      loop: "{{ groups['grafana_server'] }}"

    - name: Setup graphite
      include_role:
        name: nsg.graphite

    - name: Implement log rotation
      include_role:
        name: openstack.logrotate

    - name: Install nginx web server
      package:
        name: nginx
        update_cache: yes
      register: install_packages
      until: install_packages | success
      retries: 5
      delay: 2

    - name: Configure graphite-web virtual host
      copy:
        content: |
          server {
            listen 80 default_server;
            listen [::]:80 default_server;
            charset utf-8;
            server_name _;
            location /static/ {
              alias /opt/graphite/webapp/content/;
            }
            location / {
              include uwsgi_params;
              uwsgi_pass 127.0.0.1:3031;
            }
          }
        dest: /etc/nginx/sites-available/default
      register: _nginx_config

    - name: Restart nginx
      service:
        name: nginx
        enabled: yes
        daemon_reload: yes
        state: restarted
      when: _nginx_config | changed
