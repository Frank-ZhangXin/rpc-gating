---
- name: Check that the artifacts source path has been provided
  assert:
    msg: |
      The file artifact source path must be provided.
    that:
      - "artifact['source'] is defined"

# TODO(odyssey4me):
# Perhaps have these facts provided by variables
# defined in groovy instead so that we do not have
# to rely on environment variables. This may make
# the switch to declaritive pipelines easier.
- name: Set dependent facts
  set_fact:
    object_store_container_name: "{{ lookup('env', 'RE_JOB_REPO_NAME') }}"

- name: Check that the RE_JOB_REPO_NAME has been provided
  debug:
    msg: |
      The RE_JOB_REPO_NAME environment variable must be set. Skipping artifact upload.
  when:
    - "object_store_container_name == ''"

- name: Check if the source exists
  stat:
    path: "{{ artifact['source'] }}"
    follow: yes
    get_attributes: no
    get_checksum: no
    get_md5: no
    get_mime: no
  register: _artifact_path

- name: Show whether the source exists
  debug:
    msg: "source {{ artifact['source'] }} exists: {{ _artifact_path.stat.exists | bool }}"

- name: Upload the artifacts if all conditions are met
  when:
    - "_artifact_path.stat.exists | bool"
    - "object_store_container_name != ''"
  block:

    - import_tasks: cloudfiles_create_container.yml

    - name: Create the destination path and move the source file(s) into it
      shell: |
        mkdir -p {{ artifact['dest'] | dirname }}
        mv -v {{ artifact['source'] | basename }} {{ artifact['dest'] }}
      args:
        warn: no
        executable: /bin/bash
        chdir: "{{ artifact['source'] | dirname }}"
      register: _move_source_files
      when:
        - "artifact['dest'] is defined"

    - name: Show the output of the artifact move
      debug:
        var: _move_source_files.stdout
      when:
        - "artifact['dest'] is defined"

    - name: Set the name of the file/folder to upload
      set_fact:
        artifact_basename: >-
          {{ (artifact['dest'] is defined) | ternary(artifact.get('dest') | regex_replace('^(\/?[^\/]*).*$', '\1'), artifact['source'] | basename) }}

    - name: Show the name of the file/folder to upload
      debug:
        var: artifact_basename

    # The ansible os_object module does not currently support setting
    # the object expiration header field, nor does it do threaded uploads
    # (which make this much faster), nor does it support setting a segment
    # size (for large files), so we use the swift client instead. We use
    # a segment size of 1GB to ensure that large files are segmented to
    # less than the 5GB limit implemented by Cloud Files.
    - name: Upload Artifacts to Cloud Files
      command: >-
        swift upload {{ object_store_container_name }} {{ artifact_basename }}
        --object-threads 100
        --skip-identical
        --segment-size 1073741824
        {{ artifact.expire_after is defined | ternary("--header 'X-Delete-After:" ~ artifact.get('expire_after') ~ "'", "") }}
      args:
        chdir: "{{ artifact['source'] | dirname }}"
      environment:
        OS_AUTH_TOKEN: "{{ auth_token }}"
        OS_STORAGE_URL: "{{ (object_store['endpoints'] | selectattr('region', 'equalto', region) | first)['publicURL'] }}"
      register: upload_archive
      until: upload_archive | success
      retries: 10
      delay: 30

    - name: "Check if build_artifacts.yml exists"
      stat:
        path: "{{ lookup('env', 'WORKSPACE') }}/build_artifacts.yml"
      register: build_artifacts_stat

    - name: "Load published artefact info for this build"
      include_vars:
        file: "{{ lookup('env', 'WORKSPACE') }}/build_artifacts.yml"
        name: "existing_build_artifacts"
      when: build_artifacts_stat.stat.exists

    - name: "Update build_artifacts with file artefacts"
      set_fact:
        new_build_artifacts: "{{ {'artifacts': {'file': {'name': 'release-artifacts', 'container_name': '{{ object_store_container_name }}', 'container_public_url': '{{ container_public_url }}', 'public_url': '{{ container_public_url }}/{{ artifact_basename }}/', 'title': 'Build file artifacts'}}} }}"

    - name: "Update published artefacts file"
      copy:
        content: "{{ existing_build_artifacts | default({}) | combine(new_build_artifacts, recursive=True) | to_nice_yaml }}"
        dest: "{{ lookup('env', 'WORKSPACE') }}/build_artifacts.yml"
